{"version":3,"sources":["components/Interface/Loader.js","contexts/RocketsContext.js","App.js","reportWebVitals.js","index.js"],"names":["Loader","className","animationData","loaderAnimation","RocketsContext","createContext","URL","RocketsContextProvider","props","useState","rockets","setRockets","useEffect","a","fetch","response","json","data","console","log","fetchRockets","Provider","value","getRocket","rocketId","find","rocket","rocket_id","children","Launches","React","lazy","LaunchDetail","Auth","App","routes","exact","path","localStorage","getItem","to","render","fallback","basename","process","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"yHAAA,oCAYeA,IARA,WACb,OACE,qBAAKC,UAAU,gCAAf,SACE,cAAC,IAAD,CAAQC,cAAeC,Q,qHCLvBC,EAAiBC,0BAEjBC,EAAM,wCAECC,EAAyB,SAACC,GAAW,IAAD,EACjBC,mBAAS,IADQ,mBACxCC,EADwC,KAC/BC,EAD+B,KAG/CC,qBAAU,YACU,uCAAG,8BAAAC,EAAA,+EAEMC,MAAMR,GAFZ,cAEXS,EAFW,gBAGEA,EAASC,OAHX,OAGXC,EAHW,OAIjBN,EAAWM,GAJM,kDAMjBC,QAAQC,IAAR,mCAAwCb,IANvB,0DAAH,qDASlBc,KACC,IAMH,OACE,cAAChB,EAAeiB,SAAhB,CACEC,MAAO,CACLZ,QAASA,EACTa,UARY,SAACC,GACjB,OAAOd,EAAQe,MAAK,SAACC,GAAD,OAAYA,EAAOC,YAAcH,OAIrD,SAMGhB,EAAMoB,YAKExB,O,28uEC3BTyB,EAAWC,IAAMC,MAAK,kBAAM,gCAC5BC,EAAeF,IAAMC,MAAK,kBAAM,gCAChCE,EAAMH,IAAMC,MAAK,kBAAI,sDA2CZG,EAzCH,WACV,IAAMC,EACD,8BACC,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,UACGC,aAAaC,QAAQ,YAAwB,cAAC,IAAD,CAAUC,GAAG,cAG7D,cAAC,IAAD,CAAOH,KAAK,SAAZ,SACE,cAACJ,EAAD,MAGF,cAAC,IAAD,CAAOI,KAAK,aAAZ,SACuC,QAApCC,aAAaC,QAAQ,YAAwB,cAACV,EAAD,IAAe,cAAC,IAAD,CAAUW,GAAG,gBAEhF,cAAC,IAAD,CAAOH,KAAK,YAAYD,OAAK,EAACK,OAAQ,kBAAM,cAACZ,EAAD,OAC5C,cAAC,IAAD,CAAOQ,KAAK,0BAA0BI,OAAQ,kBAAM,cAACT,EAAD,OACpD,cAAC,IAAD,UACE,cAAC,IAAD,CAAUQ,GAAG,aAMbE,EACJ,qBAAKzC,UAAU,sDAAf,SACE,cAACD,EAAA,EAAD,MAIJ,OACE,cAACI,EAAA,EAAD,UACE,cAAC,WAAD,CAAUsC,SAAUA,EAApB,SACE,cAAC,IAAD,CAAQC,SAAUC,SAAlB,SACGT,SCrCIU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASb,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFc,SAASC,eAAe,SAM1BX,M","file":"static/js/main.d03ff34a.chunk.js","sourcesContent":["import Lottie from \"lottie-react\";\n\nimport loaderAnimation from \"../../assets/animations/rocket.json\";\n\nconst Loader = () => {\n  return (\n    <div className=\"flex w-96 h-96 justify-center\">\n      <Lottie animationData={loaderAnimation} />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { createContext, useState, useEffect } from \"react\";\n\nconst RocketsContext = createContext();\n\nconst URL = \"https://api.spacexdata.com/v3/rockets\";\n\nexport const RocketsContextProvider = (props) => {\n  const [rockets, setRockets] = useState([]);\n\n  useEffect(() => {\n    const fetchRockets = async () => {\n      try {\n        const response = await fetch(URL);\n        const data = await response.json();\n        setRockets(data);\n      } catch (error) {\n        console.log(`Can't fetch rockets from ${URL}`);\n      }\n    };\n    fetchRockets();\n  }, []);\n\n  const getRocket = (rocketId) => {\n    return rockets.find((rocket) => rocket.rocket_id === rocketId);\n  };\n\n  return (\n    <RocketsContext.Provider\n      value={{\n        rockets: rockets,\n        getRocket: getRocket,\n      }}\n    >\n      {props.children}\n    </RocketsContext.Provider>\n  );\n};\n\nexport default RocketsContext;\n","import React, { Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  HashRouter\n} from \"react-router-dom\";\n\nimport { RocketsContextProvider } from \"./contexts/RocketsContext\";\nimport Loader from \"./components/Interface/Loader\";\nconst Launches = React.lazy(() => import(\"./Screen/Launches\"));\nconst LaunchDetail = React.lazy(() => import(\"./Screen/LaunchDetail\"));\nconst Auth =React.lazy(()=>import('./Screen/Auth'))\n\nconst App = () => {\n  const routes = (\n       <div>\n        <Switch>\n          <Route exact path=\"/\">\n            {localStorage.getItem(\"loggedIn\") == \"true\" ? <Redirect to=\"/login\" /> : <Redirect to=\"/login\" />}\n          </Route>\n\n          <Route path=\"/login\">\n            <Auth />\n          </Route>\n\n          <Route path=\"/dashboard\">\n            {localStorage.getItem(\"loggedIn\") == \"true\" ? <Launches /> : <Redirect to=\"/launches\" />}\n          </Route>\n      <Route path=\"/launches\" exact render={() => <Launches />} />\n      <Route path=\"/launches/:flightNumber\" render={() => <LaunchDetail />} />\n      <Route>\n        <Redirect to=\"/\" />\n      </Route>\n    </Switch>\n    </div>\n  );\n\n  const fallback = (\n    <div className=\"flex w-screen h-screen justify-center items-center \">\n      <Loader />\n    </div>\n  );\n\n  return (\n    <RocketsContextProvider>\n      <Suspense fallback={fallback}>\n        <Router basename={process.env.PUBLIC_URL}>\n          {routes}\n        </Router>\n      </Suspense>\n    </RocketsContextProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}